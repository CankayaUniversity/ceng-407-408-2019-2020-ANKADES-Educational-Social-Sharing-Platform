# Generated by Django 3.0.2 on 2020-04-09 15:40

import ckeditor.fields
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('courseNumber', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('title', models.CharField(max_length=254)),
                ('slug', models.SlugField(allow_unicode=True, max_length=254, unique=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('introduction', models.CharField(blank=True, max_length=254, null=True)),
                ('coursePicture', models.FileField(blank=True, null=True, upload_to='')),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('updatedDate', models.DateTimeField(blank=True, null=True)),
                ('view', models.PositiveIntegerField(default=0)),
                ('isActive', models.BooleanField(default=True)),
                ('isPrivate', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Course',
                'ordering': ['-createdDate'],
            },
        ),
        migrations.CreateModel(
            name='CourseLecture',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sectionTitle', models.CharField(blank=True, max_length=100, null=True)),
                ('sectionSlug', models.SlugField(allow_unicode=True, unique=True)),
                ('sectionDescription', ckeditor.fields.RichTextField()),
                ('sectionCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('sectionUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('lectureNumber', models.CharField(max_length=32, unique=True)),
                ('lectureTitle', models.CharField(blank=True, max_length=100, null=True)),
                ('lectureDescription', ckeditor.fields.RichTextField()),
                ('lectureCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('lectureUpdatedDate', models.DateTimeField(blank=True, null=True)),
                ('lectureView', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('lectureMedia', models.FileField(blank=True, null=True, upload_to='')),
                ('isLecturePrivate', models.BooleanField(default=True)),
                ('courseId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='course.Course')),
                ('lectureParent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='course.CourseLecture')),
            ],
            options={
                'db_table': 'CourseLecture',
            },
        ),
        migrations.CreateModel(
            name='CourseComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', ckeditor.fields.RichTextField()),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('updatedDate', models.DateTimeField(blank=True, null=True)),
                ('isRoot', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=True)),
                ('view', models.PositiveIntegerField(default=0)),
                ('like', models.PositiveIntegerField(default=0)),
                ('courseId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='course.Course')),
                ('creator', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('parentId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='articleCommentId', to='course.CourseComment')),
            ],
            options={
                'db_table': 'CourseComment',
                'ordering': ['-createdDate'],
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=254)),
                ('slug', models.SlugField(allow_unicode=True, max_length=254, unique=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('updatedDate', models.DateTimeField(blank=True, null=True)),
                ('isRoot', models.BooleanField(default=False)),
                ('tree', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(default=dict), blank=True, default=list, max_length=200, size=None)),
                ('view', models.PositiveIntegerField(default=0)),
                ('isActive', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('parentId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='course.CourseCategory')),
            ],
            options={
                'db_table': 'CourseCategory',
                'ordering': ['-createdDate'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='categoryId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='course.CourseCategory'),
        ),
        migrations.AddField(
            model_name='course',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='enrolledAccount',
            field=models.ManyToManyField(blank=True, db_table='AccountCourse', default=0, related_name='enrolledAccount', to=settings.AUTH_USER_MODEL),
        ),
    ]
