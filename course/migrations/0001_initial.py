# Generated by Django 3.0.2 on 2020-02-24 21:33

import ckeditor.fields
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Bölüm Id')),
                ('title', models.CharField(max_length=254, verbose_name='Kurs Başlığı')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Section Açıklaması')),
                ('updatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Kurs Bölüm Düzenlendiği Tarih')),
                ('isActive', models.BooleanField(default=True, verbose_name='Aktiflik')),
                ('view', models.PositiveIntegerField(default=0, verbose_name='Makale Görüntülenme Tarihi')),
                ('createdDate', models.DateTimeField(auto_now_add=True, verbose_name='Bölüm Oluşturulduğu Tarih')),
            ],
            options={
                'db_table': 'CourseSection',
            },
        ),
        migrations.CreateModel(
            name='CourseLecture',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Ders Id')),
                ('title', models.CharField(max_length=254, verbose_name='Ders Başlığı')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Ders Açıklaması')),
                ('createdDate', models.DateTimeField(auto_now_add=True, verbose_name='Ders Oluşturulduğu Tarih')),
                ('updatedDate', models.DateTimeField(auto_now_add=True, verbose_name='Ders Güncellendiği Tarih')),
                ('isActive', models.BooleanField(default=True, verbose_name='Aktiflik')),
                ('media', models.FileField(upload_to='', verbose_name='Dosya')),
                ('isQuiz', models.BooleanField(default=False, verbose_name='Quiz mi?')),
                ('question', ckeditor.fields.RichTextField(verbose_name='Quiz Sorusu')),
                ('answer', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(default=dict), blank=True, default=list, max_length=200, size=None)),
                ('view', models.PositiveIntegerField(default=0, verbose_name='Makale Görüntülenme Tarihi')),
                ('sectionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.CourseSection', verbose_name='Bölüm Adı')),
            ],
            options={
                'db_table': 'CourseLecture',
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Kurs Kategori Id')),
                ('title', models.CharField(max_length=254, verbose_name='Kurs Kategori Başlığı')),
                ('slug', models.SlugField(max_length=254, unique=True, verbose_name='Kurs Kategori Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Kurs Kategori Açıklama')),
                ('createdDate', models.DateTimeField(auto_now_add=True, verbose_name='Kurs Kategori Oluşturulduğu Tarih')),
                ('updatedDate', models.DateTimeField(verbose_name='Kurs Kategori Güncellendiği Tarih')),
                ('isRoot', models.BooleanField(default=False, verbose_name='Root Durumu')),
                ('tree', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(default=dict), blank=True, default=list, max_length=200, size=None)),
                ('view', models.PositiveIntegerField(default=0, verbose_name='Makale Görüntülenme Tarihi')),
                ('isActive', models.BooleanField(default=True, verbose_name='Aktiflik')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan Kişi')),
                ('parentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.CourseCategory', verbose_name='Üst Kategorisi')),
            ],
            options={
                'db_table': 'CourseCategory',
                'ordering': ['-createdDate'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Kurs Id')),
                ('title', models.CharField(max_length=254, verbose_name='Kurs Başlığı')),
                ('slug', models.SlugField(max_length=254, unique=True, verbose_name='Kurs Slug')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Kurs Açıklaması')),
                ('media', models.FileField(blank=True, null=True, upload_to='', verbose_name='Kurs Dosya Yükleme')),
                ('createdDate', models.DateTimeField(auto_now_add=True, verbose_name='Kurs Oluşturulduğu Tarih')),
                ('updatedDate', models.DateTimeField(verbose_name='Kurs Güncellendiği Tarih')),
                ('view', models.PositiveIntegerField(default=0, verbose_name='Kurs Görüntülenme Tarihi')),
                ('isActive', models.BooleanField(default=True, verbose_name='Aktiflik')),
                ('isPrivate', models.BooleanField(default=False, verbose_name='Kurs Özel Mi ?')),
                ('categoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.CourseCategory', verbose_name='Kurs Kategori')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kurs Öğretmeni')),
            ],
            options={
                'db_table': 'Course',
                'ordering': ['-createdDate'],
            },
        ),
    ]
